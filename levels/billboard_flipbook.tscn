[gd_scene load_steps=17 format=3 uid="uid://dvykiy54tioid"]

[ext_resource type="Material" uid="uid://b8jn4adckw2c8" path="res://shaders/m_billboard_flipbook.material" id="1_vpaq8"]
[ext_resource type="Shader" uid="uid://b21i33lcshyam" path="res://shaders/billboard_flipbook.tres" id="2_li5tw"]
[ext_resource type="Material" uid="uid://nlqbxcthkj72" path="res://shaders/m_p_billboard_flipbook.material" id="2_qyn1a"]
[ext_resource type="Texture2D" uid="uid://3akpt0kuruyx" path="res://textures/particle_sprite_smoke.png" id="3_1xbow"]
[ext_resource type="Texture2D" uid="uid://y4adivkbblt8" path="res://textures/grid_3x4.png" id="3_f8hpv"]
[ext_resource type="Shader" uid="uid://crx52mdtt63ua" path="res://shaders/particle_billboard_flipbook.tres" id="5_4w1o1"]

[sub_resource type="PlaneMesh" id="PlaneMesh_qk5d8"]
material = ExtResource("1_vpaq8")
orientation = 2

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xq8f1"]
render_priority = 0
shader = ExtResource("2_li5tw")
shader_parameter/_invert_x = false
shader_parameter/_invert_y = false
shader_parameter/_limit_frames = false
shader_parameter/_max_frames = 0.0
shader_parameter/_anim_loop = true
shader_parameter/_particle_anim = false
shader_parameter/_number_of_columns = 8
shader_parameter/_number_of_rows = 8
shader_parameter/TexFlipbook = ExtResource("3_1xbow")

[sub_resource type="PlaneMesh" id="PlaneMesh_addyq"]
material = SubResource("ShaderMaterial_xq8f1")
size = Vector2(5, 5)
orientation = 2

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_liykb"]
emission_shape = 3
emission_box_extents = Vector3(1, 1, 1)
gravity = Vector3(0, -2, 0)
anim_speed_min = 6.1
anim_speed_max = 6.1
anim_offset_min = 0.5
anim_offset_max = 0.5

[sub_resource type="PlaneMesh" id="PlaneMesh_ir57w"]
material = ExtResource("2_qyn1a")
orientation = 2

[sub_resource type="ShaderMaterial" id="ShaderMaterial_uc6jy"]
render_priority = 0
shader = ExtResource("5_4w1o1")
shader_parameter/_invert_x = false
shader_parameter/_invert_y = false
shader_parameter/_limit_frames = false
shader_parameter/_max_frames = 0.0
shader_parameter/_anim_loop = false
shader_parameter/_particle_anim = true
shader_parameter/_number_of_columns = 8
shader_parameter/_number_of_rows = 8
shader_parameter/TexFlipbook = ExtResource("3_1xbow")

[sub_resource type="PlaneMesh" id="PlaneMesh_0e4an"]
material = SubResource("ShaderMaterial_uc6jy")
size = Vector2(5, 5)
orientation = 2

[sub_resource type="Shader" id="Shader_blbu0"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.1.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform int particles_anim_h_frames;
uniform int particles_anim_v_frames;
uniform bool particles_anim_loop;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
//	UV=UV*uv1_scale.xy+uv1_offset.xy;
//	mat4 mat_world = mat4(normalize(INV_VIEW_MATRIX[0]), normalize(INV_VIEW_MATRIX[1]) ,normalize(INV_VIEW_MATRIX[2]), MODEL_MATRIX[3]);
//	mat_world = mat_world * mat4(vec4(cos(INSTANCE_CUSTOM.x), -sin(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));
//	MODELVIEW_MATRIX = VIEW_MATRIX * mat_world;
//	MODELVIEW_NORMAL_MATRIX = mat3(MODELVIEW_MATRIX);
	float h_frames = float(particles_anim_h_frames);
	float v_frames = float(particles_anim_v_frames);
	float particle_total_frames = float(particles_anim_h_frames * particles_anim_v_frames);
	float particle_frame = floor(INSTANCE_CUSTOM.z * particle_total_frames);
	if (!particles_anim_loop) {
		particle_frame = clamp(particle_frame, 0.0, particle_total_frames - 1.0);
	} else {
		particle_frame = mod(particle_frame, particle_total_frames);
	}
	UV /= vec2(h_frames, v_frames);
	UV += vec2(mod(particle_frame, h_frames) / h_frames, floor((particle_frame + 0.5) / h_frames) / v_frames);
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_cj64r"]
render_priority = 0
shader = SubResource("Shader_blbu0")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/particles_anim_h_frames = 3
shader_parameter/particles_anim_v_frames = 4
shader_parameter/particles_anim_loop = false
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("3_f8hpv")

[sub_resource type="PlaneMesh" id="PlaneMesh_uph8u"]
material = SubResource("ShaderMaterial_cj64r")
orientation = 2

[node name="Node" type="Node"]

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
cast_shadow = 0
mesh = SubResource("PlaneMesh_qk5d8")

[node name="Label3D2" type="Label3D" parent="MeshInstance3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.161952, 2.92291, 0)
pixel_size = 0.0155
text = "Flipbook
Visual Shader"

[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 6.20105, 0)
cast_shadow = 0
mesh = SubResource("PlaneMesh_addyq")

[node name="Label3D2" type="Label3D" parent="MeshInstance3D2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.161952, 2.92291, 0)
pixel_size = 0.0155
text = "Flipbook
Visual Shader
Smoke"

[node name="GPUParticles3D" type="GPUParticles3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5.24475, 0, 0)
lifetime = 1.96
speed_scale = 0.15
transform_align = 1
process_material = SubResource("ParticleProcessMaterial_liykb")
draw_pass_1 = SubResource("PlaneMesh_ir57w")

[node name="Label3D" type="Label3D" parent="GPUParticles3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.92912, 0)
pixel_size = 0.0155
text = "Flipbook
Visual Shader"

[node name="GPUParticles3D3" type="GPUParticles3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5.24475, 6.34124, 0)
lifetime = 1.96
speed_scale = 0.15
transform_align = 1
process_material = SubResource("ParticleProcessMaterial_liykb")
draw_pass_1 = SubResource("PlaneMesh_0e4an")

[node name="Label3D" type="Label3D" parent="GPUParticles3D3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.92912, 0)
pixel_size = 0.0155
text = "Flipbook
Visual Shader
Smoke"

[node name="GPUParticles3D2" type="GPUParticles3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 11.5415, 0, 0)
lifetime = 1.96
speed_scale = 0.15
transform_align = 1
process_material = SubResource("ParticleProcessMaterial_liykb")
draw_pass_1 = SubResource("PlaneMesh_uph8u")

[node name="Label3D2" type="Label3D" parent="GPUParticles3D2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0399742, 2.92291, 0)
pixel_size = 0.0155
text = "Standard Material"
